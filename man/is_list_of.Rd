% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_list_of.R
\name{is_list_of}
\alias{is_list_of}
\alias{is_list_of_lists}
\alias{is_list_of_characters}
\title{Test if an input is a list of something}
\usage{
is_list_of(input, test)

is_list_of_lists(input)

is_list_of_characters(input)
}
\arguments{
\item{input}{List to test}

\item{test}{Test function to apply to each element of \code{input}. Either a
function name, an anonymous function, or a purrr-style lambda function}
}
\value{
A logical value. If \code{input} is not a list, \code{FALSE} and a warning.
}
\description{
Tests if all elements of a list are a specific type. \code{is_list_of} accepts any
test function. \code{is_list_of_lists()} tests if all elements are lists.
\code{is_list_of_characters()} tests if all elements are character vectors.
}
\examples{
list_of_lists      <- list(as.list(letters[1:4]), as.list(1:4))
list_of_characters <- list(letters[1:4], LETTERS[1:4])
list_of_integers   <- list(1:4, 5:8)

# Test if all elements of a list are lists
is_list_of_lists(list_of_lists)
is_list_of_lists(list_of_characters)
is_list_of_lists(list_of_integers)

# Test if all elements of a list are character vectors
is_list_of_characters(list_of_lists)
is_list_of_characters(list_of_characters)
is_list_of_characters(list_of_integers)

# Use any test function to test all elements of a list...
# ... with a function name
is_list_of(list_of_integers, is.integer)
# ... an anonymous function
is_list_of(list_of_integers, function(x) all(x \%\% 1 == 0))
# ... or a purrr-style lambda
is_list_of(list_of_integers, ~ all(. \%\% 1 == 0))

# All functions give a warning and return FALSE if their input is not a list
is_list_of_lists(1:4)
is_list_of_characters(1:4)
is_list_of(1:4, is.integer)
}
\seealso{
\code{\link[=is.list]{is.list()}} to test if an input is a list

\code{\link[purrr:flatten]{purrr::flatten()}} or \code{\link[rlang:flatten]{rlang::flatten()}} to remove a level of hierarchy
from a list

\code{\link[rlang:squash]{rlang::squash()}} to remove all levels of hierarchy from a list
}
